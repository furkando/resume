{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Modal1 from \"react-modal\";\nimport { Contexto } from \"../appContext\";\nimport { useState, useContext } from \"react\";\nimport styles from \"../styles/modal.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { timeout } from \"./helpers\";\nimport emailjs from \"emailjs-com\";\nimport { buttonDisabled } from \"../styles/spinningWheel.module.css\";\nimport SpinningWheel from \"../components/spinningWheel\";\nexport default function Modal() {\n  const {\n    modalIsOpen,\n    setIsOpen\n  } = useContext(Contexto);\n  const {\n    0: submitMessage,\n    1: setSubmitMessage\n  } = useState(\"\");\n  const {\n    0: allowSend,\n    1: setAllowSend\n  } = useState(true);\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    userName: \"\",\n    userEmail: \"\",\n    userPhoneNumber: \"\",\n    userMessage: \"\"\n  });\n\n  const handleForm = event => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [event.target.id]: typeof event.target.value === \"string\" ? event.target.value : JSON.stringify(event.target.value)\n    }));\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const emailjsObj = {\n      serviceId: \"gmail\",\n      templateId: \"template_aRfTvlUy\",\n      userId: process.env.NEXT_PUBLIC_USER_ID\n    };\n\n    try {\n      if (allowSend) {\n        setAllowSend(() => false);\n        const result = await emailjs.send(emailjsObj.serviceId, emailjsObj.templateId, form, emailjsObj.userId);\n\n        if (result.status == 200) {\n          setSubmitMessage(() => \"Arigato!\");\n        } else {\n          setSubmitMessage(() => \"Something unexpected happened!\");\n        }\n\n        console.log(\"result:\", result);\n        await timeout(2);\n        closeModal();\n        setSubmitMessage(() => \"\");\n        await timeout(0.5);\n        setAllowSend(() => true);\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (allowSend) {\n        setAllowSend(() => false);\n        console.error(err);\n        setSubmitMessage(() => \"Something unexpected happened!\");\n        await timeout(2);\n        closeModal();\n        setSubmitMessage(() => \"\");\n        await timeout(0.5);\n        setAllowSend(() => true);\n      }\n    }\n  };\n\n  return __jsx(Modal1, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    contentLabel: \"Email Modal\",\n    closeTimeoutMS: 500,\n    className: {\n      base: `${styles.baseContent}`,\n      afterOpen: `${styles.afterOpenContent}`,\n      beforeClose: `${styles.beforeCloseContent}`\n    },\n    overlayClassName: {\n      base: `${styles.baseOverlay}`,\n      afterOpen: `${styles.afterOpenOverlay}`,\n      beforeClose: `${styles.beforeCloseOverlay}`\n    }\n  }, __jsx(\"h1\", null, \"Thank you for your time\", \" \", __jsx(\"span\", {\n    \"aria-label\": \"Hi there\",\n    role: \"img\"\n  }, \"\\u270C\")), __jsx(\"h2\", null, \"Please fill this form, and I'll be in touch with you\"), __jsx(\"form\", {\n    onSubmit: submitForm\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"Name:\")), __jsx(\"li\", null, __jsx(\"input\", {\n    type: \"text\",\n    id: \"userName\",\n    name: \"name\",\n    onChange: handleForm,\n    required: true\n  }))), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email:\")), __jsx(\"li\", null, __jsx(\"input\", {\n    type: \"text\",\n    id: \"userEmail\",\n    name: \"email\",\n    onChange: handleForm,\n    required: true\n  }))), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"label\", {\n    htmlFor: \"number\"\n  }, \"Phone Number\")), __jsx(\"li\", null, __jsx(\"input\", {\n    type: \"text\",\n    id: \"userPhoneNumber\",\n    name: \"phoneNumber\",\n    onChange: handleForm\n  }))), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"label\", {\n    htmlFor: \"message\"\n  }, \"Your message:\")), __jsx(\"li\", null, __jsx(\"textarea\", {\n    type: \"text\",\n    id: \"userMessage\",\n    name: \"message\",\n    onChange: handleForm,\n    required: true\n  }))), __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"button\", {\n    disabled: allowSend ? false : true,\n    type: \"submit\",\n    className: allowSend ? `${styles.submitButton}` : `${styles.submitButton} ${buttonDisabled}`\n  }, allowSend ? \"SUBMIT\" : __jsx(SpinningWheel, null)), __jsx(\"span\", null, submitMessage)))), __jsx(\"div\", {\n    onClick: closeModal,\n    className: `${styles.cross}`\n  }, __jsx(FontAwesomeIcon, {\n    color: \"rgba(34, 34, 34, 0.9)\",\n    icon: faTimes\n  }), \" \"));\n}","map":null,"metadata":{},"sourceType":"module"}